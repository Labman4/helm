apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo.fullname" . }}
  labels:
    {{- include "demo.labels" . | nindent 4 }}
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "demo.selectorLabels" . | nindent 6 }}
      app: {{ .Chart.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "demo.selectorLabels" . | nindent 8 }}
        app: {{ .Chart.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "demo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9464
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: https
            initialDelaySeconds: 30
            failureThreshold: 10
            timeoutSeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: https
            initialDelaySeconds: 30
            failureThreshold: 10
            timeoutSeconds: 3
            periodSeconds: 5
          env:
            {{- if .Values.extraEnv }}{{ toYaml .Values.extraEnv | trim | nindent 12 }}{{ end }}
            {{- if or (.Values.existingSecrets) (.Values.secrets) }}
#            - name: MICRONAUT_ENVIRONMENTS
#              value: secrets
#            - name: MICRONAUT_CONFIG_FILES
#              value: /app/application.yaml,/app/application-secrets.yml
            {{- end }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | trim | nindent 12 }}
            {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.extraVolumes  }}{{ toYaml .Values.extraVolumes | trim | nindent 6 }}{{ end }}
      {{- if .Values.configuration }}
        - name: config
          configMap:
            name: {{ template "demo.fullname" . }}
      {{- end }}
      {{- if or (.Values.existingSecrets) (.Values.secrets) }}
        - name: secrets
          secret:
            {{- if .Values.existingSecrets }}
            secretName: {{ .Values.existingSecrets }}
            {{- else }}
            secretName: {{ template "demo.fullname" . }}-secrets
            {{- end }}
      {{- end }}